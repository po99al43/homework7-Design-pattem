1.Singleton 一個物件同時間只能有一個人使用
ex:一間廁所同一時間只能一個人使用

2.Simple Factory 透過CLASS 造物件
ex:手機透過工廠的設計圖進行生產
            
3.Factory method 讓次類別決定要實體化的類別為何
ex: 每當手機型號更新時都由另一家工廠進行生產
                
4.prototype  可以造出一樣的物件 clone
ex:手機商可以以原本的型號複製出另一部一模一樣的手機加上一些新功能再推出騙錢

            
5.Adapter 物件如何組織再一起 
ex:手機用的記憶卡要放到電腦讀取需透過轉卡或者讀卡機以供電腦進行識別

6.Bridge 抽象部分與它的實現部分分離,介面的轉換
ex:一個櫃子可以連接不同的class製造出書櫃,床頭櫃,衣櫃
            
7.Decorator 可以動態的為一個物件加上功能 
ex:cpu裝置在主機板上,主機板被機殼包住,而構成我們使用的電腦主機

8.Facade 用一個介面包覆很亂的程式碼
ex:IOS的作業系統程式碼很複雜,但把它包住的介面卻大家都會使用

9.Observer 定義一個一對多的相依關係，使得當一的物件狀態改變時，所有相依於一的多物件會被通知
ex:twitch的直播,有訂閱的人在開台時,都會收到通知

10.Command 封裝請求，然後進行一系列的參數化或操作
ex:透過手機電源可以對手機開關機或者開關螢幕
           
11.Interpreter 根據文法,單字,內容綜合起來構成一個樹狀的架構
ex: